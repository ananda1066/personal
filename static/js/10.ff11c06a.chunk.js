(this.webpackJsonppersonal=this.webpackJsonppersonal||[]).push([[10],{167:function(e,t,a){"use strict";a.r(t);var r=a(1),s=(a(0),a(7)),i=a(21),n=function(e){var t=e.data;return Object(r.jsx)("div",{className:"cell-container",children:Object(r.jsxs)("article",{className:"mini-post",children:[Object(r.jsxs)("header",{children:[Object(r.jsx)("h3",{children:Object(r.jsx)("a",{href:t.link,target:"_blank",rel:"noreferrer",children:t.title})}),Object(r.jsx)("time",{className:"published",children:t.date})]}),Object(r.jsx)("a",{href:t.link,target:"_blank",rel:"noreferrer",className:"image",children:Object(r.jsx)("img",{src:"".concat("/personal").concat(t.image),alt:t.subtitle})}),Object(r.jsx)("div",{className:"description",children:Object(r.jsx)("p",{children:t.desc})})]})})},c=[{title:"IMhere!",subtitle:"Google CodeU Program",link:"https://github.com/rebeccaruva/CodeU-Spring-2018",image:"/images/projects/codeu.png",date:"June 2018 - August 2018",desc:"IMhere! is a professional chat app my team designed and built for CodeU Summer 2018. I added sentiment analysis to check for unprofessional tone using the GCP NLP API. I also added translation abilities using the GCP Translation API, hiding from each user the fact that the people they are interacting with could be conversing in completely different languages. The app was written in Java and run on Google App Engine."},{title:"Kodejoy",subtitle:"UC Davis Research Project",image:"/images/projects/kodejoy.PNG",date:"May 2017 - August 2017",desc:"Kodejoy is a Ruby on Rails application that generates problems to test computer science skills automatically. I wrote a Python script that tokenizes code snippets from a PostgreSQL database to create fill-in-the-blank problems. I also worked on frontend in HTML, CSS, and Bootstrap, as well as experimented with RESTful APIs. The code is unfortunately private and the website has since been taken down."},{title:"TileWarp",subtitle:"My first Android app",link:"https://github.com/ananda1066/TileWarp",image:"/images/projects/tilewarp.png",date:"January 2015 - August 2015",desc:"TileWarp is a puzzle app that can be used as both a game and a learning tool. I developed it in eleventh grade with the help of two other students, a marketer and a designer, as a way to implement my Java knowledge. To build it, I used Android Studio, focusing on switch statements and array lists."}];t.default=function(){return Object(r.jsx)(i.a,{title:"Projects",description:"Learn about Alisha Nanda's projects.",children:Object(r.jsxs)("article",{className:"post",id:"projects",children:[Object(r.jsx)("header",{children:Object(r.jsxs)("div",{className:"title",children:[Object(r.jsx)("h2",{"data-testid":"heading",children:Object(r.jsx)(s.b,{to:"/projects",children:"Projects"})}),Object(r.jsxs)("p",{children:["A selection of projects that I like. More available on my ",Object(r.jsx)("a",{href:"https://github.com/ananda1066",target:"_blank",rel:"noreferrer",children:"Github page"}),"."]})]})}),Object(r.jsx)("div",{className:"cell-container",children:Object(r.jsxs)("article",{className:"mini-post",children:[Object(r.jsxs)("header",{children:[Object(r.jsx)("h3",{children:Object(r.jsx)("a",{href:"https://github.com/grpc/grpc",target:"_blank",rel:"noreferrer",children:"gRPC"})}),Object(r.jsx)("time",{className:"published",children:"July 2020 - Present"})]}),Object(r.jsx)("a",{href:"https://github.com/grpc/grpc",target:"_blank",rel:"noreferrer",className:"image",children:Object(r.jsx)("img",{src:"".concat("/personal","/images/projects/grpc.jpg"),alt:"Current work"})}),Object(r.jsx)("div",{className:"description",children:Object(r.jsxs)("p",{children:[" I currently work on gRPC C++ as part of my job, specifically focusing on performance improvements and feature requests from internal customers. For instance, I recently wrote an open-source guide on best performance practices for gRPC (",Object(r.jsx)("a",{href:"https://grpc.io/docs/guides/performance/",target:"_blank",rel:"noreferrer",children:"link to guide"}),")."]})})]})}),Object(r.jsx)("div",{className:"cell-container",children:Object(r.jsxs)("article",{className:"mini-post",children:[Object(r.jsxs)("header",{children:[Object(r.jsx)("h3",{children:Object(r.jsx)("a",{href:"https://github.com/Theacalix/JEANIDatabase",target:"_blank",rel:"noreferrer",children:"JEANI Database"})}),Object(r.jsx)("time",{className:"published",children:"January 2020 - March 2020"})]}),Object(r.jsx)("a",{href:"https://github.com/Theacalix/JEANIDatabase",target:"_blank",rel:"noreferrer",className:"image",children:Object(r.jsx)("img",{src:"".concat("/personal","/images/projects/ucdavis.png"),alt:"ECS 165A Project"})}),Object(r.jsx)("div",{className:"description",children:Object(r.jsxs)("p",{children:[" I worked with 4 classmates on a database from start to finish as our quarter-long project for ECS 165A (Databases). This included adding features such as table/page structure, querying/indexing, merging dirty pages, and concurrency. I implemented querying and indexing (using a B-tree), and pair-programmed an implementation of QUECC (",Object(r.jsx)("a",{href:"https://expolab.org/papers/quecc.pdf",target:"_blank",rel:"noreferrer",children:"research paper link"}),"), an experimental concurrency database architecture focused on low and high priority queues."]})})]})}),c.map((function(e){return Object(r.jsx)(n,{data:e},e.title)}))]})})}}}]);
//# sourceMappingURL=10.ff11c06a.chunk.js.map